# Workflow name
name: Multiarch EE Build


# Controls when the workflow will run
on:
  # This is a reusable workflow
  workflow_call:
    inputs:
      EE_FOLDER_NAME:
        description: 'name of the folder where the EE is located (will become the name of the EE)'
        default: ''
        required: true
        type: string
      EE_IMAGE_TAG:
        description: 'just one tag for image build'
        default: 'latest'
        required: true
        type: string
      CA:
        description: 'user provided certificate authority'
        required: false
        type: string
    secrets:
      REDHAT_PASSWORD:
        description: 'needed for registry login'
        required: false
      REDHAT_USERNAME:
        description: 'needed for registry login'
        required: false
      QUAY_USERNAME:
        description: 'needed for quay login'
        required: false
      QUAY_PASSWORD:
        description: 'needed for quay login'
        required: false
      AH_TOKEN:
        description: 'API token for hosted automation hub'
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    environment: deploy
    steps:

      # In this job, all steps begin with a name
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            quay.io/${{ secrets.QUAY_USERNAME }}/${{ inputs.EE_FOLDER_NAME }}
          tags: |
            type=semver,pattern={{version}}
            latest

      - name: Install python requirements (ansible-builder)
        working-directory: .github/workflows
        run: pip install -r requirements.txt

      - name: Log in to quay.io
        id: registry-quay
        uses: redhat-actions/podman-login@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Log in to registry.redhat.io
        id: registry-redhat
        uses: redhat-actions/podman-login@v1
        with:
          registry: registry.redhat.io
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: substitute token for automation hub
        id: ah-token
        working-directory: ${{ inputs.EE_FOLDER_NAME }}
        run: |
          sed -i "s/my_ah_token/$AH_TOKEN/1" ansible.cfg
        env:
          AH_TOKEN: ${{ secrets.AH_TOKEN }}

      # - name: test for ansible
      #   working-directory: ${{ inputs.EE_FOLDER_NAME }}
      #   run: |
      #     ansible --version
      #   if: ${{ inputs.CA }}

      # - name: add CA copy to ee build file
      #   working-directory: ${{ inputs.EE_FOLDER_NAME }}
      #   run: |
      #     ansible -m lineinfile -a "path=./execution-environment.yml regexp='^\ \ \ \ ADD\ CA.crt' insertbefore='RUN\ pip3' line='    ADD ca.crt /etc/pki/ca-trust/source/anchors/demolab-ca.crt'" localhost
      #   if: ${{ inputs.CA }}

      # - name: add updat-ca-trust to ee build file
      #   working-directory: ${{ inputs.EE_FOLDER_NAME }}
      #   run: |
      #     ansible -m lineinfile -a "path=./execution-environment.yml regexp='^\ \ \ \ RUN\ update-ca-trust' insertbefore='RUN\ pip3' line='    RUN update-ca-trust'" localhost
      #   if: ${{ inputs.CA }}

      - name: Create the Containerfile file
        working-directory: ${{ inputs.EE_FOLDER_NAME }}
        run: ansible-builder create

      - name: Update ContainerFile to cp CA files
        working-directory: ${{ inputs.EE_FOLDER_NAME }}/context/
        run: ansible localhost -m ansible.builtin.lineinfile -a "dest=./Containerfile insertafter='^RUN ANSIBLE_GALAXY_DISABLE_GPG_VERIFY' line='RUN cp *.crt /etc/pki/ca-trust/source/anchors && update-ca-trust'"
        if: ${{ inputs.CA }}

      - name: Create the Dockerfile file
        working-directory: ${{ inputs.EE_FOLDER_NAME }}
        run: cp context/Containerfile context/Dockerfile

      - name: add trusted CA if provided
        working-directory: ${{ inputs.EE_FOLDER_NAME }}/context/_build/
        run: |
          echo $CA > ca.crt
        env:
          CA: ${{ inputs.CA }}
        if: ${{ inputs.CA }}

      - name: Build Multiarch Containers
        id: dockerbuild
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.EE_FOLDER_NAME }}/context/.
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Build image
      #   id: build-image
      #   working-directory: ${{ inputs.EE_FOLDER_NAME }}
      #   run: |
      #     ansible-builder build \
      #     --tag=${{ inputs.EE_FOLDER_NAME }}:${{ inputs.EE_IMAGE_TAG }} \
      #     --tag=${{ inputs.EE_FOLDER_NAME }}:${{ github.sha }}

      # - name: Push To quay.io
      #   id: push-to-quay
      #   uses: redhat-actions/push-to-registry@v2
      #   with:
      #     image: ${{ inputs.EE_FOLDER_NAME }}
      #     tags: |
      #       ${{ inputs.EE_IMAGE_TAG }}
      #       ${{ github.sha }}
      #     registry: quay.io/${{ secrets.QUAY_USERNAME }}/
      #     username: ${{ secrets.QUAY_USERNAME }}
      #     password: ${{ secrets.QUAY_PASSWORD }}

      - name: Print summary
        working-directory: ${{ inputs.EE_FOLDER_NAME }}
        run: |
          echo "## :rocket: Usage" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Image pushed to repository: [${{ steps.push-to-quay.outputs.registry-path }}](https://${{ steps.push-to-quay.outputs.registry-path }})" >> $GITHUB_STEP_SUMMARY
          echo "> \`podman pull ${{ steps.push-to-quay.outputs.registry-path }}\`" >> $GITHUB_STEP_SUMMARY
          echo "> \`podman pull quay.io/${{ secrets.QUAY_USERNAME }}/${{ inputs.EE_FOLDER_NAME }}:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "## :pushpin: Ansible info:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "`podman run ${{ inputs.EE_FOLDER_NAME }} ansible --version`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "## :pushpin: Installed collections:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "`podman run ${{ inputs.EE_FOLDER_NAME }} ansible-galaxy collection list`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "## :pushpin: Containerfile:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "`cat context/Containerfile`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY